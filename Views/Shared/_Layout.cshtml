<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>

    <link href="~/Content/Site.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />

    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>

    @* Notification Bell icon *@
    <script src="https://kit.fontawesome.com/b99e675b6e.js"></script>
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>

    <style>
        /* width */
        ::-webkit-scrollbar {
            width: 10px;
        }

        /* Track */
        ::-webkit-scrollbar-track {
            border-radius: 5px;
            box-shadow: inset 0 0 10px rgba(0,0,0,0.25);
        }

        /* Handle */
        ::-webkit-scrollbar-thumb {
            border-radius: 5px;
            background: #009578;
        }

            /* Handle on hover */
            ::-webkit-scrollbar-thumb:hover {
                background-color: #6dcdb1;
            }
    </style>
</head>
<body>
    @RenderPage("_Header.cshtml") <!--Render the Header only. Include navigation bar / menus-->
    <!--Whole body of the page-->
    <div class="container body-content">
        @RenderBody() <!--Render the body. Those views na nakaset sa "layout.cshtml" ang layout.-->
    </div>
    @RenderPage("_Footer.cshtml")

    @* Add Jquery Library *@
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/jquery.signalR-2.4.2.min.js"></script>

    <script src="/signalr/hubs"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    @* Add css  *@
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/CustomCSS/NotificationFont.css" rel="stylesheet" />

    <style type="text/css">
        .noti-content {
            position: fixed;
            right: 100px;
            background: #ececec;
            font-size: medium;
            font-family: 'Montserrat', sans-serif;
            border-radius: 4px;
            top: 47px;
            width: 440px;
            display: none;
            border: 1px solid #9E988B;
        }

        #notiContent {
            max-height: 350px;
            overflow: auto;
            padding: 0px;
            margin: 0px;
            padding-left: 20px;
        }

            #notiContent notify_item {
                margin: 3px;
                padding: 6px;
                background: #FF6600;
            }

            @* Copied *@
        .notify_item {
            display: flex;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #dbdaff;
        }

        @* Styles if hover each list of notification *@
            .notify_item:hover {
                background-color: #FFA384;
            }

        .notify_img {
            margin-right: 15px;
        }

        .notify_info p {
            margin-bottom: 5px;
        }

        .notify_time {
            color: #c5c5e6;
            font-size: 12px;
        }

        .noti-top-arrow {
            border-color: transparent;
            border-bottom-color: #F5DEB3;
            border-style: dashed dashed solid;
            border-width: 0 8.5px 8.5px;
            position: absolute;
            right: 32px;
            top: -8px;
        }

        span.noti {
            color: lightgreen;
            margin: 15px;
            position: fixed;
            right: 100px;
            font-size: 30px;
            cursor: pointer;
        }

        span.count {
            position: fixed;
            top: -1px;
        }

        .noti-content.active {
            display: block;
            opacity: 1;
            -moz-transition: opacity 1s, visibility 1.3s;
            -webkit-transition: opacity 1s, visibility 1.3s;
            -o-transition: opacity 1s, visibility 1.3s;
            transition: opacity 1s, visibility 1.3s;
        }

        .noti-content.hidden {
            visibility: hidden;
            opacity: 0;
            -moz-transition: opacity 1s, visibility 1.3s;
            -webkit-transition: opacity 1s, visibility 1.3s;
            -o-transition: opacity 1s, visibility 1.3s;
            transition: opacity 1s, visibility 1.3s;
        }

    </style>

    @* Add jquery code for Get Notification & setup signalr *@
    <script type="text/javascript">
        var holdCount = 0;
        $(document).ready(function () {
            countunreadnotif();
        });

        //count unread notification
        function countunreadnotif() {
            $.ajax({
                type: 'GET',
                url: '/Notification/countunread',
                success: function (data) {
                    data = JSON.parse(data);

                    if (data > 0) {
                        holdCount = data;
                        $('span.count').css({
                            "height": "25px",
                            "width": "25px",
                            "background-color": "red",
                            "border-radius": "50%",
                            "font-size": "25px",
                            "color": "white",
                            "display": "inline-block"
                        });
                        $('span.count').html(data);
                    } else {
                        holdCount = 0;
                        $('span.count').hide();
                    }
                },

                error: function (error) {
                    console.log(error);
                }
            })
        }

        //mark all as read
        function markRead() {
            $.ajax({
                async: true,
                dataType: 'JSON',
                type: 'POST',
                url: '/Notification/ReadAll',
                data: { cnt: holdCount },
                success: function (data) {
                    $('span.count').hide();
                    holdCount = 0;
                },
                error: function () {
                    alert("JSON error.");
                }
            });
        }

        $(function () {
            // Click on notification icon for show notification
            $('span.noti').click(function (e) {
                e.stopPropagation();
                $('span.noti').css("color", "lightgreen");

                $('.noti-content').slideToggle(700);
                updateNotification();
            })

            $('html').click(function () {
                $('.noti-content').slideUp(700);
            })

            // update notification - change to get list of notif with unread values (0)
            function updateNotification() {
                $('#notiContent').empty();
                $('#notiContent').append($('<li>Loading...</li>'));
                $.ajax({
                    type: 'GET',
                    url: '/Notification/GetNotifications',
                    success: function (data) {

                        data = JSON.parse(data);

                        $('#notiContent').empty();
                        if (data.length == 0) {
                            var rows = "<div class='notify_item'>"
                                + "<div class='notify_info'>"
                                + "<p>" + "You Have No New Notifications" + "</p>"
                                + "</div>"
                                + "</div>";
                            $('#notiContent').append(rows);
                        }
                        $.each(data, function (i, item) {

                            if (item.Isread == 0) {
                                var rowss = "<div class='notify_item' style='background-color:#FFA384;'>"
                                    + "<div class='notify_img'>"
                                    + "<img src='" + item.ImgSource + "' style='width:80px'/> "
                                    + "</div>"
                                    + "<div class='notify_info'>"
                                    + "<p>" + item.Message + "</p>"
                                    + "<span class='notify_time'>" + item.AddedOn + "</span>"
                                    + "</div>"
                                    + "</div>";

                                $('#notiContent').append(rowss);
                            }
                            else {
                                var rowss = "<div class='notify_item'>"
                                    + "<div class='notify_img'>"
                                    + "<img src='" + item.ImgSource + "' style='width:80px'/> "
                                    + "</div>"
                                    + "<div class='notify_info'>"
                                    + "<p>" + item.Message + "</p>"
                                    + "<span class='notify_time'>" + item.AddedOn + "</span>"
                                    + "</div>"
                                    + "</div>";

                                $('#notiContent').append(rowss);
                            }
                        });
                        markRead();
                    },

                    error: function (error) {
                        console.log(error);
                    }
                })
            }

            // update notification count - change to count rows with unread values(0) - call a jsonresult to count from database - useless
            function updateNotificationCount() {
                $('span.count').show();
                holdCount++;
                $('span.count').css({
                    "height": "25px",
                    "width": "25px",
                    "background-color": "red",
                    "border-radius": "50%",
                    "font-size": "25px",
                    "color": "white",
                    "display": "inline-block"
                });
                $('span.count').html(holdCount);
            }

            // signalr js code for start hub and send receive notification
            var notificationHub = $.connection.notificationHub;
            $.connection.hub.start().done(function () {
                console.log('Notification hub started');
            });

            //signalr method for push server message to client
            notificationHub.client.notify = function (message) {
                if (message && message.toLowerCase() == "added") {
                    countunreadnotif();
                }
            }

        })
    </script>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

</body>
</html>

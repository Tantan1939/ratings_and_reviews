@model CustomerDataRatingsAndReviewsManagementSystem.Models.NewPasswordModel

@{
    ViewBag.Title = "UpdatePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html>
<head>
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>

    @*hide password animation and fonts*@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

    @* sweet alert sources *@
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>

    <script src="~/CustomJS/UpdatePasswordJS.js"></script>

</head>

<body>
    <br />
    <br />
    @using (Ajax.BeginForm(new AjaxOptions { HttpMethod = "POST" }))
    {
        <div class="container-fluid">
            <div class="col-md-8 mx-auto wrapper align-items-center justify-content-center h-100">
                <div class="row">
                    <div class="col-md-6">
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.UserID)
                        @Html.HiddenFor(model => model.Username)
                        @Html.HiddenFor(model => model.HiddenCurrentPassword)

                        <div class="mb-3">
                            @Html.LabelFor(model => model.CurrentPassword, htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                @Html.EditorFor(model => model.CurrentPassword, new { htmlAttributes = new { @class = "form-control" } })
                                <div class="input-group-append">
                                    <button id="show_password1" class="btn btn-primary" type="button">
                                        <span class="fa fa-eye-slash icon"></span>
                                    </button>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                                <div class="input-group-append">
                                    <button id="show_password2" class="btn btn-primary" type="button">
                                        <span class="fa fa-eye-slash icon"></span>
                                    </button>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                <div class="input-group-append">
                                    <button id="show_password3" class="btn btn-primary" type="button">
                                        <span class="fa fa-eye-slash icon"></span>
                                    </button>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                        <br />

                        <div class="sign-up mt-4">
                            <input type="submit" class="btn btn-primary w-100" value="Change" id="btnSave" />
                            <a href="#" onclick="location.href='@Url.Action("ManageAccount", "DashBoard")'">Go Back</a>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    }


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
        <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
        <script type="text/javascript">
            $(document).ready(function () {
                $("#btnSave").click(function () {
                    SaveItem();
                });
            });

            function ResetItem() {
                $("#CurrentPassword").val("");
                $("#NewPassword").val("");
                $("#ConfirmPassword").val("");
            }

            function SaveItem() {
                var formData = new FormData();
                formData.append("UserID", $("#UserID").val());
                formData.append("Username", $("#Username").val());
                formData.append("HiddenCurrentPassword", $("#HiddenCurrentPassword").val());
                formData.append("CurrentPassword", $("#CurrentPassword").val());
                formData.append("NewPassword", $("#NewPassword").val());
                formData.append("ConfirmPassword", $("#ConfirmPassword").val());
                $.ajax({
                    async: true,
                    dataType: 'JSON',
                    type: 'POST',
                    contentType: false,
                    processData: false,
                    url: '/DashBoard/UpdatePassword',
                    data: formData,
                    success: function (data) {
                        if (data.Success) {
                            swal({
                                title: data.Message,
                                text: "",
                                type: 'info',
                                confirmButtonClass: 'btn-primary',
                                confirmButtonText: 'Continue..'
                            },
                                function (isConfirm) {
                                    ResetItem();
                                    var url = '@Url.Action("ManageAccount", "DashBoard")';
                                    window.location.href = url;
                                });
                        }
                        else {
                            swal({
                                title: data.Message,
                                text: "",
                                type: 'warning',
                                confirmButtonClass: 'btn-danger',
                                confirmButtonText: 'Edit'
                            });
                        }
                    },
                    error: function () {
                        alert("Error Occurred! Try Again.");
                    }
                });
            }
        </script>
    }
</body>
</html>

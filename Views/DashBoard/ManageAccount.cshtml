@model CustomerDataRatingsAndReviewsManagementSystem.Models.ReturnUserInfoModel

@{
    ViewBag.Title = "ManageAccount";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>

    @* sweet alert sources *@
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>

     @*Custom css*@ 
    <link href="~/CustomCSS/ManageAccCSS.css" rel="stylesheet" />
    <link href="~/CustomCSS/UploadImgCSS.css" rel="stylesheet" />

     @*Custom JS*@ 
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

</head>

<body>
    <br />
    <br />
    <hr />

    <div id="reloadForm">
        @using (Ajax.BeginForm(new AjaxOptions { HttpMethod = "POST" }))
        {
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-6 mx-auto wrapper align-items-center justify-content-center h-100">
                        <div class="col-md-6">
                            @Html.AntiForgeryToken()

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.UserID)
                            
                                @if (Model.ImgPath == "empty")
                                {
                                    <img src="~/Gif/105-1055656_account-user-profile-avatar-avatar-user-profile-icon.png" width="100%" height="100%" id="btnShowModal" />
                                }
                                else
                                {
                                    <img src="@Url.Content(Model.ImgPath)" width="100%" height="100%" id="btnShowModal" />
                                }
                            
                            <hr />
                            <br />

                            <div class="mb-3">
                                <b> @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "form-label" }) </b>
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                            <br />

                            <div class="mb-3">
                                <b> @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "form-label" }) </b>
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                            <br />

                            <div class="mb-3">
                                <b> @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "form-label" }) </b>
                                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                            </div>
                            <br />

                            <div class="mb-3">
                                <b> @Html.LabelFor(model => model.HomeAddress, htmlAttributes: new { @class = "form-label" }) </b>
                                @Html.EditorFor(model => model.HomeAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.HomeAddress, "", new { @class = "text-danger" })
                            </div>
                            <br />

                            <div class="mb-3">
                                <b> @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "form-label" }) </b>
                                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                            </div>
                            <br />

                            <div class="mb-3">
                                <b> @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "form-label" }) </b>
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                            <br />

                            <div class="mb-3">
                                <b> @Html.LabelFor(model => model.Region, htmlAttributes: new { @class = "form-label" }) </b>
                                @Html.EditorFor(model => model.Region, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Region, "", new { @class = "text-danger" })
                            </div>
                            <br />

                            <div class="mb-3">
                                <b> @Html.LabelFor(model => model.ZIPcode, htmlAttributes: new { @class = "form-label" }) </b>
                                @Html.EditorFor(model => model.ZIPcode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ZIPcode, "", new { @class = "text-danger" })
                            </div>
                            <br />

                            <div class="mb-3">
                                <b> @Html.LabelFor(model => model.SimNumber, htmlAttributes: new { @class = "form-label" }) </b>
                                @Html.EditorFor(model => model.SimNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SimNumber, "", new { @class = "text-danger" })
                            </div>
                            <br />
                            <div class="sign-up mt-4">
                                <input type="submit" class="btn btn-primary w-100" value="Update" id="btnSave" />
                                <a href="#" onclick="location.href='@Url.Action("UpdatePassword", "DashBoard")'"> Change Password? </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="modal fade" tabindex="-1" id="loginModal" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        ×
                    </button>
                    <h4 class="modal-title">Profile Picture</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-8 mx-auto">

                            <main class="main_full">
                                <div class="container1">
                                    <div class="panel">
                                        <div class="button_outer">
                                            <div class="btn_upload">
                                                @Html.TextBoxFor(model => model.HoldNewImg, new { type = "file" @*, id = "upload_file"*@ })
                                                @*<input type="file" id="upload_file" name="imgFile" onchange="previewImg(event)">*@
                                                Select Image
                                            </div>
                                            <div class="processing_bar"></div>
                                            <div class="success_box"></div>
                                        </div>
                                    </div>
                                    <div class="error_msg"></div>
                                    <div class="uploaded_file_view" id="uploaded_view">
                                        <span class="file_remove">X</span>
                                    </div>
                                </div>
                            </main>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @*<i class="fa fa-plus"></i><input type="submit" name="Accept" value="Accept" formaction=@Url.Action("TermsAccept") formmethod="post" id="btnAccept" class="btn btn-primary button button4" />*@
                    <button type="submit" name="Accept" value="Accept" formaction=@Url.Action("UploadImg") formmethod="post" id="btnAccept" class="btn btn-primary button button4"><i class="fa fa-plus"></i> &nbsp; Upload Photo</button>
                    @*<button type="submit" class="btn btn-primary button button4"><i class="fa fa-plus"></i> &nbsp;Upload Photo </button>*@
                    <button type="button" id="btnHideModal" class="btn btn-primary button button4">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>
    @*<input type="submit" name="Decline" value="Decline" formaction=@Url.Action("TermsDecline") formmethod="post" id="btnDecline" class="btn btn-default" />*@

    @* font awesome *@
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />

    @* modal js *@
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script src="bootstrap/js/bootstrap.min.js"></script>
    <script type="text/javascript">
        var btnUpload = $("#HoldNewImg"),
            btnOuter = $(".button_outer");
        $(document).ready(function () {
            $("#btnShowModal").hover(function () {
                $("#loginModal").modal('show');
                $("#btnAccept").hide();
            });

            $("#btnHideModal").click(function () {
                $("#uploaded_view").removeClass("show");
                $("#uploaded_view").find("img").remove();
                $("#HoldNewImg").val("");
                btnOuter.removeClass("file_uploading");
                btnOuter.removeClass("file_uploaded");
                $("#loginModal").modal('hide');
                $(".error_msg").text("");
            });

            //the x button of modal
            $(".close").on("click", function (e) {
                $("#uploaded_view").removeClass("show");
                $("#uploaded_view").find("img").remove();
                $("#HoldNewImg").val("");
                btnOuter.removeClass("file_uploading");
                btnOuter.removeClass("file_uploaded");
                $(".error_msg").text("");
            });
        });
    </script>

    @* Useless - for reference only *@
    <script type="text/javascript">
        var previewImg = function (event) {
            var result = document.getElementById("btnShowModal");
            result.src = URL.createObjectURL(event.target.files[0]);
        };
    </script>

    @* upload image JS *@
    <script type="text/javascript">
        var btnUpload = $("#HoldNewImg"),
            btnOuter = $(".button_outer");
        btnUpload.on("change", function (e) {
            var uploadedFile = URL.createObjectURL(e.target.files[0]);
            var ext = btnUpload.val().split('.').pop().toLowerCase();
            if ($.inArray(ext, ['png', 'jpg', 'jpeg']) == -1) {
                $(".error_msg").text("Not an Image...");
                $("#HoldNewImg").val("");
                $("#btnAccept").hide();
            } else {
                $("#btnHideModal").hide();
                $(".close").hide();
                $(".error_msg").text("");
                btnOuter.addClass("file_uploading");
                setTimeout(function () {
                    btnOuter.addClass("file_uploaded");
                }, 3000);
                setTimeout(function () {
                    $("#uploaded_view").append('<img src="' + uploadedFile + '" />').addClass("show");
                    $("#btnAccept").show();
                    $("#btnHideModal").show();
                    $(".close").show();
                }, 3500);
            }
        });
        $(".file_remove").on("click", function (e) {
            $("#uploaded_view").removeClass("show");
            $("#uploaded_view").find("img").remove();
            $("#HoldNewImg").val("");
            $("#btnAccept").hide();
            btnOuter.removeClass("file_uploading");
            btnOuter.removeClass("file_uploaded");
        });
    </script>

    @section scripts{
        @Scripts.Render("~/bundles/jqueryval")
        @*<script src="~/CustomJS/UploadImgJS.js"></script>*@
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
        <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

        <script type="text/javascript">

            $("#btnSave").click(function () {
                SaveItem();
            });

            //save new image
            $("#btnAccept").click(function () {
                LoadAccept();
            });

            //function to save new image
            function LoadAccept() {
                var formdata = new FormData();
                formdata.append("HoldNewImg", $("#HoldNewImg").get(0).files[0]);
                $.ajax({
                    async: true,
                    dataType: 'JSON',
                    type: 'POST',
                    contentType: false,
                    processData: false,
                    url: '/DashBoard/UploadImg',
                    data: formdata,
                    success: function (data) {
                        if (data.Success) {
                            swal({
                                title: data.Message,
                                text: "",
                                type: 'info',
                                confirmButtonClass: 'btn-primary',
                                confirmButtonText: 'Continue..',
                                closeOnConfirm: true
                            },
                                function (isConfirm) {
                                    //hide modal after confirm
                                    $("#loginModal").modal('hide');
                                    var btnOuter = $(".button_outer");

                                    $("#uploaded_view").removeClass("show");
                                    $("#uploaded_view").find("img").remove();
                                    $("#HoldNewImg").val("");
                                    btnOuter.removeClass("file_uploading");
                                    btnOuter.removeClass("file_uploaded");
                                    //call a function to get and display new image path to DOM
                                    newImahe();
                                });
                        }
                        else {
                            swal({
                                title: data.Message,
                                text: "",
                                type: 'warning',
                                confirmButtonClass: 'btn-danger',
                                confirmButtonText: 'Edit'
                            });
                        }
                    },
                    error: function () {
                        swal({
                            title: "No image found. Try again.",
                            text: "",
                            type: 'warning',
                            confirmButtonClass: 'btn-danger',
                            confirmButtonText: 'Edit'
                        });
                    }
                });
            }

            //function to get new image path
            function newImahe() {
                $.ajax({
                    url: "/DashBoard/newPathDisplay",
                    method: "GET",
                    success: function (data) {
                        data = JSON.parse(data);
                        /*document.getElementById("btnShowModal").src = data;*/
                        $("#btnShowModal").attr("src", data).addClass("show");
                        $("#ImgPath").attr("src", data).addClass('show');
                    },
                    error: function (err) {
                        alert(err);
                    }
                })
            }

            function ResetItem() {
                $("#FirstName").val("");
                $("#LastName").val("");
                $("#EmailAddress").val("");
                $("#HomeAddress").val("");
                $("#Age").val("");
                $("#City").val("");
                $("#Region").val("");
                $("#ZIPcode").val("");
                $("#SimNumber").val("");
            }

            function SaveItem() {
                var formData = new FormData();
                formData.append("UserID", $("#UserID").val());
                formData.append("FirstName", $("#FirstName").val());
                formData.append("LastName", $("#LastName").val());
                formData.append("EmailAddress", $("#EmailAddress").val());
                formData.append("HomeAddress", $("#HomeAddress").val());
                formData.append("Age", $("#Age").val());
                formData.append("City", $("#City").val());
                formData.append("Region", $("#Region").val());
                formData.append("ZIPcode", $("#ZIPcode").val());
                formData.append("SimNumber", $("#SimNumber").val());

                $.ajax({
                    async: true,
                    dataType: 'JSON',
                    type: 'POST',
                    contentType: false,
                    processData: false,
                    url: '/DashBoard/ManageAccount',
                    data: formData,
                    success: function (data) {
                        if (data.Success) {
                            swal({
                                title: data.Message,
                                text: "",
                                type: 'info',
                                confirmButtonClass: 'btn-primary',
                                confirmButtonText: 'Continue..',
                                closeOnConfirm: true
                            },
                                function (isConfirm) {
                                    var url = '@Url.Action("History", "Transaction")';
                                    window.location.href = url;
                                });
                        }
                        else {
                            swal({
                                title: data.Message,
                                text: "",
                                type: 'warning',
                                confirmButtonClass: 'btn-danger',
                                confirmButtonText: 'Edit'
                            });
                        }
                    },
                    error: function () {
                        alert("Error Occurred! Try Again.");
                    }
                });
            }
        </script>
    }
</body>
</html>